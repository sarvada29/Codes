//Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

//We will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.

//You must solve this problem without using the library's sort function.

//Solution-1

class Solution {
    public void sortColors(int[] nums) {
        int zero=0;
        int one=0;
        int two=0;
        for(int i=0;i<nums.length;i++){
            if(nums[i]==0){
                zero++;
            }
            if(nums[i]==1){
                one++;
            }
            if(nums[i]==2){
                two++;
            }
        }
        int j=0;
        while(j<zero){
            nums[j]=0;
            j++;
        }
        while(j<one+zero){
            nums[j]=1;
            j++;
        }
        while(j<nums.length){
            nums[j]=2;
            j++;
        }
        
    }
}

// Solution-2

class Solution {
    public void sortColors(int[] nums) {
      int i=0;
        int j=nums.length-1;
        int k=0;
        while(k<=j){
        if(nums[k]==0){
         int temp=nums[k];
        nums[k]=nums[i];
        nums[i]=temp;
            i++;
            k++;
        }
     else if(nums[k]==2){
             int temp=nums[k];
        nums[k]=nums[j];
        nums[j]=temp;
            j--;
            
        }
       else{
          k++;
      }
        }
    }
}
