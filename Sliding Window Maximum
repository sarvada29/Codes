//You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.

//Return the max sliding window.

//Solution

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
       int[] a=new int[nums.length-k+1];
        int i=0;
        int j=0;
        int z=0;
         Deque<Integer> deque = new LinkedList<Integer>();
        int max=Integer.MIN_VALUE;
        while(i<nums.length){
            if(deque.peek()==null){
                deque.add(nums[i]);
            }
            else{
              while(deque.peekLast()<nums[i]){
               deque.removeLast();
                  if(deque.peekLast()==null)break;
           }
            deque.addLast(nums[i]);
            }
            if(i-j+1==k){
                a[z]=deque.peek();
                z++;
                if(nums[j]==deque.peek()){
                    deque.poll();
                   
                }
                    j++;
        }
        
            i++;
    }
        return a;
    }
}
